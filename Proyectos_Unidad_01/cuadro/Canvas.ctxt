#BlueJ class context
comment0.target=Canvas
comment0.text=\r\n\ Lienzo\ es\ una\ clase\ para\ permitir\ el\ dibujo\ de\ gr\u00E1ficos\ simples\ sobre\ un\ canvas.\r\n\ Esta\ es\ una\ modificaci\u00F3n\ de\ la\ clase\ Canvas\ de\ prop\u00F3sitos\ generales,\ desarrollada\r\n\ especialmente\ para\ el\ ejemplo\ de\ "formas"\ en\ BlueJ.\r\n\r\n\ @author\:\ Bruce\ Quig\r\n\ @author\:\ Michael\ Kolling\ (mik)\r\n\r\n\ @version\ 2006.03.30\r\n\ Traducci\u00F3n\ Carlos\ A.\ Bart\u00F3\r\n
comment1.params=
comment1.target=Canvas\ getCanvas()
comment1.text=\r\n\ M\u00E9todo\ Factory\ para\ obtener\ el\ objeto\ singleton\ canvas.\r\n
comment2.params=titulo\ ancho\ altura\ colorFdo
comment2.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment2.text=\r\n\ Crear\ un\ Canvas.\r\n\ @param\ titulo\ \ \ el\ titulo\ a\ aparecer\ en\ el\ marco\ del\ canvas\r\n\ @param\ ancho\ \ \ \ el\ ancho\ deseado\ para\ el\ canvas\r\n\ @param\ altura\ \ \ la\ altura\ deseada\ para\ el\ canvas\r\n\ @param\ colorFdo\ el\ color\ deseado\ del\ fondo\ del\ canvas\r\n
comment3.params=visible
comment3.target=void\ setVisible(boolean)
comment3.text=\r\n\ Establecer\ la\ visibilidad\ del\ canvas\ y\ traer\ el\ canvas\ al\ frente\ de\r\n\ la\ pantalla\ cuando\ se\ haga\ visible.\ Este\ m\u00E9todo\ tambi\u00E9n\ puede\ ser\ usado\r\n\ para\ traer\ un\ canvas\ preexistente\ al\ frente\ de\ otras\ ventanas.\r\n\ El\ valor\ del\ @param\ visible\ boolean\ representa\ la\ visibilidad\ deseada\ del\r\n\ canvas\ (true\ or\ false)\ \r\n
comment4.params=referenciaObjeto\ color\ forma
comment4.target=void\ dibujar(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment4.text=\r\n\ Dibujar\ una\ forma\ dada\ sobre\ el\ canvas.\r\n\ @param\ \ referenciaObjeto\ \ un\ objeto\ para\ definir\ la\ identidad\ para\ esta\ forma\r\n\ @param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ \ el\ color\ de\ la\ forma\r\n\ @param\ \ forma\ \ \ \ \ \ \ \ \ \ \ \ \ el\ objet\ forma\ a\ ser\ dibujado\ en\ el\ canvas\r\n
comment5.params=referenciaObjeto
comment5.target=void\ borrar(java.lang.Object)
comment5.text=\r\n\ Borrar\ de\ la\ pantalla\ una\ forma\ dada.\r\n\ @param\ \ referenciaObjeto\ \ el\ objeto\ forma\ object\ a\ ser\ borrado\r\n
comment6.params=cadenaColor
comment6.target=void\ setForegroundColor(java.lang.String)
comment6.text=\r\n\ Establecer\ el\ color\ de\ fondo\ del\ canvas.\r\n\ @param\ \ nuevoColor\ \ el\ color\ nuevo\ para\ el\ fondo\ del\ canvas.\ \r\n
comment7.params=milisegundos
comment7.target=void\ esperar(int)
comment7.text=\r\n\ Esperar\ un\ n\u00FAmero\ espec\u00EDfico\ de\ milisegundos\ antes\ de\ terminar.\r\n\ Esto\ provee\ una\ forma\ f\u00E1cil\ de\ especificar\ una\ peque\u00F1a\ demora\ que\r\n\ puede\ usarse\ cuando\ se\ producen\ animaciones.\r\n\ @param\ \ milisegundos\ \ tel\ numero\ de\ milisegundos\ \r\n
comment8.params=
comment8.target=void\ redibujar()
comment8.text=\r\n\ Redibujar\ todas\ las\ formas\ actualmente\ sobre\ el\ canvas.\r\n
comment9.params=
comment9.target=void\ borrar()
comment9.text=\r\n\ Borrar\ el\ canvas\ completo\ (No\ repinta).\r\n
numComments=10
